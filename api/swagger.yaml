openapi: 3.0.0
info:
  title: API de Medições Cranianas
  description: API para gerenciamento de pacientes e medições cranianas
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Servidor de desenvolvimento
  - url: https://cranial-app-api.example.com/api
    description: Servidor de produção

tags:
  - name: Patients
    description: Operações relacionadas a pacientes
  - name: Measurements
    description: Operações relacionadas a medições cranianas
  - name: Reports
    description: Operações relacionadas a relatórios
  - name: Auth
    description: Operações relacionadas a autenticação

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Patient:
      type: object
      required:
        - name
        - birthDate
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: "João Silva"
        birthDate:
          type: string
          format: date
          example: "2020-01-15"
        gender:
          type: string
          enum: [male, female, other]
          example: "male"
        notes:
          type: string
          example: "Paciente com histórico de prematuridade"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    
    Measurement:
      type: object
      required:
        - width
        - length
        - diagonalA
        - diagonalB
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        patientId:
          type: integer
          format: int64
        width:
          type: number
          format: float
          example: 100.5
        length:
          type: number
          format: float
          example: 150.2
        diagonalA:
          type: number
          format: float
          example: 180.3
        diagonalB:
          type: number
          format: float
          example: 175.8
        ci:
          type: number
          format: float
          readOnly: true
          example: 66.91
        cvai:
          type: number
          format: float
          readOnly: true
          example: 2.56
        classification:
          type: string
          readOnly: true
          example: "Normal"
        date:
          type: string
          format: date
          example: "2023-04-15"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    
    PatientReport:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
        latestMeasurement:
          $ref: '#/components/schemas/Measurement'
        progressData:
          type: object
          properties:
            dates:
              type: array
              items:
                type: string
                format: date
            ciValues:
              type: array
              items:
                type: number
                format: float
            cvaiValues:
              type: array
              items:
                type: number
                format: float
    
    User:
      type: object
      required:
        - username
        - password
        - email
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          writeOnly: true
          example: "securePassword123"
        role:
          type: string
          enum: [user, admin]
          default: user
          example: "user"
    
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
            username:
              type: string
            email:
              type: string
              format: email
            role:
              type: string
    
    Error:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

paths:
  /patients:
    get:
      tags:
        - Patients
      summary: Lista todos os pacientes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de pacientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      tags:
        - Patients
      summary: Cria um novo paciente
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Paciente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /patients/{id}:
    get:
      tags:
        - Patients
      summary: Obtém um paciente pelo ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do paciente
      responses:
        '200':
          description: Dados do paciente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Paciente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      tags:
        - Patients
      summary: Atualiza um paciente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Paciente atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Paciente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      tags:
        - Patients
      summary: Remove um paciente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do paciente
      responses:
        '200':
          description: Paciente removido com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Paciente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /patients/{id}/measurements:
    post:
      tags:
        - Measurements
      summary: Adiciona uma nova medição para um paciente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '201':
          description: Medição adicionada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Paciente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /patients/{id}/report:
    get:
      tags:
        - Reports
      summary: Gera um relatório de medições para um paciente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do paciente
      responses:
        '200':
          description: Relatório gerado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientReport'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Paciente não encontrado ou sem medições
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/register:
    post:
      tags:
        - Auth
      summary: Registra um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
        '400':
          description: Dados inválidos ou usuário já existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/login:
    post:
      tags:
        - Auth
      summary: Realiza login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "johndoe"
                password:
                  type: string
                  format: password
                  example: "securePassword123"
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/profile:
    get:
      tags:
        - Auth
      summary: Obtém o perfil do usuário autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
