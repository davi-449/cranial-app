{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar geminiApi = axios.create({\n  baseURL: 'https://generativelanguage.googleapis.com/v1beta2/models/chat-bison-001:generateMessage',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Api-Key': 'AIzaSyDc57MueVt9XPC00RI4ycHN64hviz58v5g'\n  }\n});\ngeminiApi.interceptors.request.use(function (config) {\n  var token = 'AIzaSyDc57MueVt9XPC00RI4ycHN64hviz58v5g';\n  if (token) {\n    config.headers.Authorization = \"Bearer \" + token;\n  }\n  return config;\n});\nexport var sendMessageToGemini = function () {\n  var _ref = _asyncToGenerator(function* (message) {\n    try {\n      var response = yield geminiApi.post('', {\n        prompt: {\n          messages: [{\n            author: 'user',\n            content: message\n          }]\n        }\n      });\n      return response.data;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        if (error.response) {\n          console.error('Erro na resposta da API:', {\n            status: error.response.status,\n            data: error.response.data\n          });\n        } else if (error.request) {\n          console.error('Erro na requisição (sem resposta):', error.request);\n        } else {\n          console.error('Erro desconhecido no Axios:', error.message);\n        }\n      } else {\n        console.error('Erro desconhecido:', error.message);\n      }\n      throw error;\n    }\n  });\n  return function sendMessageToGemini(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","geminiApi","create","baseURL","timeout","headers","interceptors","request","use","config","token","Authorization","sendMessageToGemini","_ref","_asyncToGenerator","message","response","post","prompt","messages","author","content","data","error","isAxiosError","console","status","_x","apply","arguments"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/services/geminiApi.ts"],"sourcesContent":["import axios from 'axios';\r\nconst geminiApi = axios.create({\r\n  baseURL: 'https://generativelanguage.googleapis.com/v1beta2/models/chat-bison-001:generateMessage',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'X-Api-Key': 'AIzaSyDc57MueVt9XPC00RI4ycHN64hviz58v5g',\r\n  },\r\n});\r\n\r\ngeminiApi.interceptors.request.use((config) => {\r\n  const token = 'AIzaSyDc57MueVt9XPC00RI4ycHN64hviz58v5g'; // Substitua pelo token de autenticação\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const sendMessageToGemini = async (message: string) => {\r\n  try {\r\n    const response = await geminiApi.post('', {\r\n      prompt: {\r\n        messages: [\r\n          {\r\n            author: 'user',\r\n            content: message,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // Erro com resposta da API\r\n        console.error('Erro na resposta da API:', {\r\n          status: error.response.status,\r\n          data: error.response.data,\r\n        });\r\n      } else if (error.request) {\r\n        // Erro na requisição (sem resposta)\r\n        console.error('Erro na requisição (sem resposta):', error.request);\r\n      } else {\r\n        // Outro erro relacionado ao Axios\r\n        console.error('Erro desconhecido no Axios:', error.message);\r\n      }\r\n    } else {\r\n      // Erro genérico (não relacionado ao Axios)\r\n      console.error('Erro desconhecido:', (error as Error).message);\r\n    }\r\n    throw error;\r\n  }\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,yFAAyF;EAClGC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEFJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAK;EAC7C,IAAMC,KAAK,GAAG,yCAAyC;EACvD,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACM,aAAa,eAAaD,KAAO;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,IAAMG,mBAAmB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAe,EAAK;IAC5D,IAAI;MACF,IAAMC,QAAQ,SAASf,SAAS,CAACgB,IAAI,CAAC,EAAE,EAAE;QACxCC,MAAM,EAAE;UACNC,QAAQ,EAAE,CACR;YACEC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAEN;UACX,CAAC;QAEL;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIvB,KAAK,CAACwB,YAAY,CAACD,KAAK,CAAC,EAAE;QAC7B,IAAIA,KAAK,CAACP,QAAQ,EAAE;UAElBS,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE;YACxCG,MAAM,EAAEH,KAAK,CAACP,QAAQ,CAACU,MAAM;YAC7BJ,IAAI,EAAEC,KAAK,CAACP,QAAQ,CAACM;UACvB,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIC,KAAK,CAAChB,OAAO,EAAE;UAExBkB,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAChB,OAAO,CAAC;QACpE,CAAC,MAAM;UAELkB,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACR,OAAO,CAAC;QAC7D;MACF,CAAC,MAAM;QAELU,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAGA,KAAK,CAAWR,OAAO,CAAC;MAC/D;MACA,MAAMQ,KAAK;IACb;EACF,CAAC;EAAA,gBAlCYX,mBAAmBA,CAAAe,EAAA;IAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}