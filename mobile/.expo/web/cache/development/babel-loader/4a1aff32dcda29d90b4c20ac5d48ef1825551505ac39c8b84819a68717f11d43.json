{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ClassificationCard = function ClassificationCard(_ref) {\n  var title = _ref.title,\n    value = _ref.value,\n    classification = _ref.classification,\n    _ref$unit = _ref.unit,\n    unit = _ref$unit === void 0 ? '' : _ref$unit;\n  var getColorByClassification = function getColorByClassification(classification) {\n    switch (classification) {\n      case 'Plagiocefalia Grave':\n        return '#d32f2f';\n      case 'Dolicocefalia':\n        return '#ff9800';\n      case 'Braquicefalia':\n        return '#ff9800';\n      case 'Normal':\n        return '#4caf50';\n      default:\n        return '#757575';\n    }\n  };\n  var backgroundColor = getColorByClassification(classification);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: title\n      })\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsxs(Text, {\n        style: styles.value,\n        children: [value.toFixed(2), unit]\n      }), _jsx(View, {\n        style: [styles.classificationContainer, {\n          backgroundColor: backgroundColor\n        }],\n        children: _jsx(Text, {\n          style: styles.classification,\n          children: classification\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  header: {\n    padding: 12,\n    backgroundColor: '#f5f5f5',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#424242'\n  },\n  content: {\n    padding: 16,\n    alignItems: 'center'\n  },\n  value: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#212121',\n    marginBottom: 8\n  },\n  classificationContainer: {\n    paddingVertical: 6,\n    paddingHorizontal: 12,\n    borderRadius: 16,\n    marginTop: 8\n  },\n  classification: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 14\n  }\n});\nexport default ClassificationCard;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","ClassificationCard","_ref","title","value","classification","_ref$unit","unit","getColorByClassification","backgroundColor","style","styles","container","children","header","content","toFixed","classificationContainer","create","borderRadius","overflow","marginBottom","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","alignItems","paddingVertical","paddingHorizontal","marginTop"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/components/ClassificationCard.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet \n} from 'react-native';\n\ninterface ClassificationCardProps {\n  title: string;\n  value: number;\n  classification: string;\n  unit?: string;\n}\n\nconst ClassificationCard: React.FC<ClassificationCardProps> = ({\n  title,\n  value,\n  classification,\n  unit = ''\n}) => {\n  // Determinar a cor com base na classificação\n  const getColorByClassification = (classification: string): string => {\n    switch (classification) {\n      case 'Plagiocefalia Grave':\n        return '#d32f2f'; // Vermelho\n      case 'Dolicocefalia':\n        return '#ff9800'; // Laranja\n      case 'Braquicefalia':\n        return '#ff9800'; // Laranja\n      case 'Normal':\n        return '#4caf50'; // Verde\n      default:\n        return '#757575'; // Cinza\n    }\n  };\n\n  const backgroundColor = getColorByClassification(classification);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>{title}</Text>\n      </View>\n      <View style={styles.content}>\n        <Text style={styles.value}>\n          {value.toFixed(2)}{unit}\n        </Text>\n        <View style={[styles.classificationContainer, { backgroundColor }]}>\n          <Text style={styles.classification}>{classification}</Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  header: {\n    padding: 12,\n    backgroundColor: '#f5f5f5',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#424242',\n  },\n  content: {\n    padding: 16,\n    alignItems: 'center',\n  },\n  value: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#212121',\n    marginBottom: 8,\n  },\n  classificationContainer: {\n    paddingVertical: 6,\n    paddingHorizontal: 12,\n    borderRadius: 16,\n    marginTop: 8,\n  },\n  classification: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 14,\n  }\n});\n\nexport default ClassificationCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}