{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NumericInput = function NumericInput(_ref) {\n  var value = _ref.value,\n    onChangeText = _ref.onChangeText,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? '0' : _ref$placeholder,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    suffix = _ref.suffix,\n    _ref$maxLength = _ref.maxLength,\n    maxLength = _ref$maxLength === void 0 ? 6 : _ref$maxLength,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable;\n  var handleChangeText = function handleChangeText(text) {\n    var numericValue = text.replace(/[^0-9.]/g, '');\n    var parts = numericValue.split('.');\n    var formattedValue = parts.length > 1 ? parts[0] + \".\" + parts.slice(1).join('') : numericValue;\n    onChangeText(formattedValue);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: [styles.inputContainer, error && styles.inputError],\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: value,\n        onChangeText: handleChangeText,\n        placeholder: placeholder,\n        keyboardType: \"numeric\",\n        maxLength: maxLength,\n        editable: editable\n      }), suffix && _jsx(Text, {\n        style: styles.suffix,\n        children: suffix\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    backgroundColor: '#fff'\n  },\n  inputError: {\n    borderColor: '#d32f2f'\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    fontSize: 16\n  },\n  suffix: {\n    paddingRight: 10,\n    color: '#757575',\n    fontSize: 14\n  }\n});\nexport default NumericInput;","map":{"version":3,"names":["React","View","TextInput","StyleSheet","Text","jsx","_jsx","jsxs","_jsxs","NumericInput","_ref","value","onChangeText","_ref$placeholder","placeholder","_ref$error","error","suffix","_ref$maxLength","maxLength","_ref$editable","editable","handleChangeText","text","numericValue","replace","parts","split","formattedValue","length","slice","join","style","styles","container","children","inputContainer","inputError","input","keyboardType","create","width","flexDirection","alignItems","borderWidth","borderColor","borderRadius","backgroundColor","flex","padding","fontSize","paddingRight","color"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/components/NumericInput.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  View, \n  TextInput, \n  StyleSheet, \n  Text,\n  TouchableOpacity\n} from 'react-native';\n\ninterface NumericInputProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  placeholder?: string;\n  error?: boolean;\n  suffix?: string;\n  maxLength?: number;\n  editable?: boolean;\n}\n\nconst NumericInput: React.FC<NumericInputProps> = ({\n  value,\n  onChangeText,\n  placeholder = '0',\n  error = false,\n  suffix,\n  maxLength = 6,\n  editable = true\n}) => {\n  // Função para formatar o valor como numérico\n  const handleChangeText = (text: string) => {\n    // Remove qualquer caractere que não seja número ou ponto\n    const numericValue = text.replace(/[^0-9.]/g, '');\n    \n    // Garante que só exista um ponto decimal\n    const parts = numericValue.split('.');\n    const formattedValue = parts.length > 1 \n      ? `${parts[0]}.${parts.slice(1).join('')}`\n      : numericValue;\n    \n    onChangeText(formattedValue);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.inputContainer,\n        error && styles.inputError\n      ]}>\n        <TextInput\n          style={styles.input}\n          value={value}\n          onChangeText={handleChangeText}\n          placeholder={placeholder}\n          keyboardType=\"numeric\"\n          maxLength={maxLength}\n          editable={editable}\n        />\n        {suffix && (\n          <Text style={styles.suffix}>{suffix}</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    backgroundColor: '#fff',\n  },\n  inputError: {\n    borderColor: '#d32f2f',\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    fontSize: 16,\n  },\n  suffix: {\n    paddingRight: 10,\n    color: '#757575',\n    fontSize: 14,\n  }\n});\n\nexport default NumericInput;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAmB1B,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAQzC;EAAA,IAPJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAAC,gBAAA,GAAAH,IAAA,CACZI,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,GAAG,GAAAA,gBAAA;IAAAE,UAAA,GAAAL,IAAA,CACjBM,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;IACbE,MAAM,GAAAP,IAAA,CAANO,MAAM;IAAAC,cAAA,GAAAR,IAAA,CACNS,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,GAAAA,cAAA;IAAAE,aAAA,GAAAV,IAAA,CACbW,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;EAGf,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAY,EAAK;IAEzC,IAAMC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAGjD,IAAMC,KAAK,GAAGF,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC;IACrC,IAAMC,cAAc,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,GAChCH,KAAK,CAAC,CAAC,CAAC,SAAIA,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,GACtCP,YAAY;IAEhBZ,YAAY,CAACgB,cAAc,CAAC;EAC9B,CAAC;EAED,OACEtB,IAAA,CAACL,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B3B,KAAA,CAACP,IAAI;MAAC+B,KAAK,EAAE,CACXC,MAAM,CAACG,cAAc,EACrBpB,KAAK,IAAIiB,MAAM,CAACI,UAAU,CAC1B;MAAAF,QAAA,GACA7B,IAAA,CAACJ,SAAS;QACR8B,KAAK,EAAEC,MAAM,CAACK,KAAM;QACpB3B,KAAK,EAAEA,KAAM;QACbC,YAAY,EAAEU,gBAAiB;QAC/BR,WAAW,EAAEA,WAAY;QACzByB,YAAY,EAAC,SAAS;QACtBpB,SAAS,EAAEA,SAAU;QACrBE,QAAQ,EAAEA;MAAS,CACpB,CAAC,EACDJ,MAAM,IACLX,IAAA,CAACF,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAAChB,MAAO;QAAAkB,QAAA,EAAElB;MAAM,CAAO,CAC3C;IAAA,CACG;EAAC,CACH,CAAC;AAEX,CAAC;AAED,IAAMgB,MAAM,GAAG9B,UAAU,CAACqC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,KAAK,EAAE;EACT,CAAC;EACDL,cAAc,EAAE;IACdM,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EACnB,CAAC;EACDV,UAAU,EAAE;IACVQ,WAAW,EAAE;EACf,CAAC;EACDP,KAAK,EAAE;IACLU,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC;EACDjC,MAAM,EAAE;IACNkC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,SAAS;IAChBF,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAezC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}