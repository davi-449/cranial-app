{"ast":null,"code":"import { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useAuth } from \"./src/contexts/AuthContext\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport MainStack from \"./src/navigation/MainStack\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    signed = _useAuth.signed,\n    loading = _useAuth.loading;\n  if (loading) {\n    return null;\n  }\n  var screenOptions = {\n    headerShown: false\n  };\n  return _jsx(Stack.Navigator, {\n    screenOptions: screenOptions,\n    children: signed ? _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainStack\n    }) : _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    })\n  });\n};\nexport default function App() {\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(NavigationContainer, {\n      children: _jsx(AppNavigator, {})\n    })]\n  });\n}","map":{"version":3,"names":["createStackNavigator","StatusBar","React","SafeAreaProvider","NavigationContainer","useAuth","LoginScreen","MainStack","jsx","_jsx","jsxs","_jsxs","Stack","AppNavigator","_useAuth","signed","loading","screenOptions","headerShown","Navigator","children","Screen","name","component","App","style"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/App.tsx"],"sourcesContent":["import { createStackNavigator, StackNavigationOptions } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useAuth } from './src/contexts/AuthContext';\nimport LoginScreen from './src/screens/LoginScreen';\nimport MainStack from './src/navigation/MainStack';\n\nconst Stack = createStackNavigator();\n\nconst AppNavigator: React.FC = () => {\n  const { signed, loading } = useAuth();\n\n  if (loading) {\n    // Exibir um indicador de carregamento enquanto verifica o estado de autenticação\n    return null;\n  }\n\n  const screenOptions: StackNavigationOptions = {\n    headerShown: false,\n  };\n\n  return (\n    <Stack.Navigator screenOptions={screenOptions}>\n      {signed ? (\n        <Stack.Screen name=\"Main\" component={MainStack} />\n      ) : (\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <StatusBar style=\"auto\" />\n      <NavigationContainer>\n        <AppNavigator />\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAgC,yBAAyB;AACtF,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,OAAO;AAChB,OAAOC,WAAW;AAClB,OAAOC,SAAS;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,IAAMa,YAAsB,GAAG,SAAzBA,YAAsBA,CAAA,EAAS;EACnC,IAAAC,QAAA,GAA4BT,OAAO,CAAC,CAAC;IAA7BU,MAAM,GAAAD,QAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAEvB,IAAIA,OAAO,EAAE;IAEX,OAAO,IAAI;EACb;EAEA,IAAMC,aAAqC,GAAG;IAC5CC,WAAW,EAAE;EACf,CAAC;EAED,OACET,IAAA,CAACG,KAAK,CAACO,SAAS;IAACF,aAAa,EAAEA,aAAc;IAAAG,QAAA,EAC3CL,MAAM,GACLN,IAAA,CAACG,KAAK,CAACS,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEhB;IAAU,CAAE,CAAC,GAElDE,IAAA,CAACG,KAAK,CAACS,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEjB;IAAY,CAAE;EACrD,CACc,CAAC;AAEtB,CAAC;AAED,eAAe,SAASkB,GAAGA,CAAA,EAAG;EAC5B,OACEb,KAAA,CAACR,gBAAgB;IAAAiB,QAAA,GACfX,IAAA,CAACR,SAAS;MAACwB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BhB,IAAA,CAACL,mBAAmB;MAAAgB,QAAA,EAClBX,IAAA,CAACI,YAAY,IAAE;IAAC,CACG,CAAC;EAAA,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}