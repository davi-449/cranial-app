{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { useApi } from \"../contexts/ApiContext\";\nimport ClassificationCard from \"../components/ClassificationCard\";\nimport TimelineChart from \"../components/TimelineChart\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReportScreen = function ReportScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    patient = _useState2[0],\n    setPatient = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reportData = _useState4[0],\n    setReportData = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedPatientId = _useState6[0],\n    setSelectedPatientId = _useState6[1];\n  var route = useRoute();\n  var _ref = route.params || {},\n    patientId = _ref.patientId;\n  var _useApi = useApi(),\n    getPatients = _useApi.getPatients,\n    getPatientReport = _useApi.getPatientReport,\n    loading = _useApi.loading,\n    error = _useApi.error;\n  var navigation = useNavigation();\n  useEffect(function () {\n    if (patientId) {\n      setSelectedPatientId(patientId);\n      loadPatientReport(patientId);\n    } else {\n      loadPatients();\n    }\n  }, [patientId]);\n  var loadPatients = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var patients = yield getPatients();\n        if (patients && patients.length > 0) {\n          if (!selectedPatientId) {\n            setSelectedPatientId(patients[0].id);\n            loadPatientReport(patients[0].id);\n          }\n        }\n      } catch (error) {\n        Alert.alert('Erro', 'Não foi possível carregar a lista de pacientes');\n      }\n    });\n    return function loadPatients() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadPatientReport = function () {\n    var _ref3 = _asyncToGenerator(function* (id) {\n      try {\n        var report = yield getPatientReport(id);\n        setReportData(report);\n        setPatient(report.patient);\n      } catch (error) {\n        Alert.alert('Erro', 'Não foi possível carregar o relatório do paciente');\n      }\n    });\n    return function loadPatientReport(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSelectPatient = function handleSelectPatient() {\n    navigation.navigate('PatientList');\n  };\n  var formatDate = function formatDate(dateString) {\n    var date = new Date(dateString);\n    return date.toLocaleDateString('pt-BR');\n  };\n  var calculateAge = function calculateAge(birthDate) {\n    var today = new Date();\n    var birth = new Date(birthDate);\n    var age = today.getFullYear() - birth.getFullYear();\n    var monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  var renderMeasurementItem = function renderMeasurementItem(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(View, {\n      style: styles.measurementItem,\n      children: [_jsxs(View, {\n        style: styles.measurementHeader,\n        children: [_jsx(Text, {\n          style: styles.measurementDate,\n          children: formatDate(item.date)\n        }), _jsx(View, {\n          style: [styles.classificationBadge, {\n            backgroundColor: getClassificationColor(item.classification)\n          }],\n          children: _jsx(Text, {\n            style: styles.classificationText,\n            children: item.classification\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.measurementDetails,\n        children: [_jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"Largura:\"\n          }), _jsxs(Text, {\n            style: styles.measurementValue,\n            children: [item.width, \" mm\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"Comprimento:\"\n          }), _jsxs(Text, {\n            style: styles.measurementValue,\n            children: [item.length, \" mm\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"Diagonal A:\"\n          }), _jsxs(Text, {\n            style: styles.measurementValue,\n            children: [item.diagonalA, \" mm\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"Diagonal B:\"\n          }), _jsxs(Text, {\n            style: styles.measurementValue,\n            children: [item.diagonalB, \" mm\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"CI:\"\n          }), _jsx(Text, {\n            style: styles.measurementValue,\n            children: item.ci\n          })]\n        }), _jsxs(View, {\n          style: styles.measurementRow,\n          children: [_jsx(Text, {\n            style: styles.measurementLabel,\n            children: \"CVAI:\"\n          }), _jsxs(Text, {\n            style: styles.measurementValue,\n            children: [item.cvai, \"%\"]\n          })]\n        })]\n      })]\n    });\n  };\n  var getClassificationColor = function getClassificationColor(classification) {\n    switch (classification) {\n      case 'Plagiocefalia Grave':\n        return '#d32f2f';\n      case 'Dolicocefalia':\n        return '#ff9800';\n      case 'Braquicefalia':\n        return '#ff9800';\n      case 'Normal':\n        return '#4caf50';\n      default:\n        return '#757575';\n    }\n  };\n  if (loading && !reportData) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      })\n    });\n  }\n  if (error) {\n    return _jsxs(View, {\n      style: styles.errorContainer,\n      children: [_jsx(Text, {\n        style: styles.errorText,\n        children: \"Erro ao carregar dados\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          return selectedPatientId && loadPatientReport(selectedPatientId);\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Tentar novamente\"\n        })\n      })]\n    });\n  }\n  if (!reportData || !reportData.measurements || reportData.measurements.length === 0) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.patientSelector,\n        children: patient ? _jsxs(View, {\n          style: styles.patientInfo,\n          children: [_jsx(Text, {\n            style: styles.patientLabel,\n            children: \"Paciente:\"\n          }), _jsx(Text, {\n            style: styles.patientName,\n            children: patient.name\n          }), _jsx(TouchableOpacity, {\n            onPress: handleSelectPatient,\n            children: _jsx(Text, {\n              style: styles.changePatient,\n              children: \"Alterar\"\n            })\n          })]\n        }) : _jsx(TouchableOpacity, {\n          style: styles.selectPatientButton,\n          onPress: handleSelectPatient,\n          children: _jsx(Text, {\n            style: styles.selectPatientText,\n            children: \"Selecione um paciente\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.noDataContainer,\n        children: [_jsx(Text, {\n          style: styles.noDataText,\n          children: patient ? 'Este paciente ainda não possui medições registradas' : 'Selecione um paciente para visualizar o relatório'\n        }), patient && _jsx(TouchableOpacity, {\n          style: styles.addMeasurementButton,\n          onPress: function onPress() {\n            return navigation.navigate('MeasurementForm', {\n              patientId: patient.id\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.addMeasurementText,\n            children: \"Adicionar Medi\\xE7\\xE3o\"\n          })\n        })]\n      })]\n    });\n  }\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(View, {\n        style: styles.patientSelector,\n        children: _jsxs(View, {\n          style: styles.patientInfo,\n          children: [_jsx(Text, {\n            style: styles.patientLabel,\n            children: \"Paciente:\"\n          }), _jsx(Text, {\n            style: styles.patientName,\n            children: patient.name\n          }), _jsx(TouchableOpacity, {\n            onPress: handleSelectPatient,\n            children: _jsx(Text, {\n              style: styles.changePatient,\n              children: \"Alterar\"\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.patientDetailsCard,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Dados do Paciente\"\n        }), _jsxs(View, {\n          style: styles.patientDetailsRow,\n          children: [_jsx(Text, {\n            style: styles.patientDetailsLabel,\n            children: \"Nome:\"\n          }), _jsx(Text, {\n            style: styles.patientDetailsValue,\n            children: patient.name\n          })]\n        }), _jsxs(View, {\n          style: styles.patientDetailsRow,\n          children: [_jsx(Text, {\n            style: styles.patientDetailsLabel,\n            children: \"Data de Nascimento:\"\n          }), _jsx(Text, {\n            style: styles.patientDetailsValue,\n            children: formatDate(patient.birthDate)\n          })]\n        }), _jsxs(View, {\n          style: styles.patientDetailsRow,\n          children: [_jsx(Text, {\n            style: styles.patientDetailsLabel,\n            children: \"Idade:\"\n          }), _jsxs(Text, {\n            style: styles.patientDetailsValue,\n            children: [calculateAge(patient.birthDate), \" anos\"]\n          })]\n        }), patient.gender && _jsxs(View, {\n          style: styles.patientDetailsRow,\n          children: [_jsx(Text, {\n            style: styles.patientDetailsLabel,\n            children: \"G\\xEAnero:\"\n          }), _jsx(Text, {\n            style: styles.patientDetailsValue,\n            children: patient.gender === 'male' ? 'Masculino' : patient.gender === 'female' ? 'Feminino' : 'Outro'\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.summaryCard,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Resumo Atual\"\n        }), _jsxs(View, {\n          style: styles.cardRow,\n          children: [_jsx(View, {\n            style: styles.cardColumn,\n            children: _jsx(ClassificationCard, {\n              title: \"\\xCDndice Craniano (CI)\",\n              value: parseFloat(reportData.latestMeasurement.ci),\n              classification: reportData.latestMeasurement.classification\n            })\n          }), _jsx(View, {\n            style: styles.cardColumn,\n            children: _jsx(ClassificationCard, {\n              title: \"CVAI\",\n              value: parseFloat(reportData.latestMeasurement.cvai),\n              classification: reportData.latestMeasurement.classification,\n              unit: \"%\"\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.recommendationContainer,\n          children: [_jsx(Text, {\n            style: styles.recommendationTitle,\n            children: \"Recomenda\\xE7\\xE3o Cl\\xEDnica:\"\n          }), _jsx(Text, {\n            style: styles.recommendationText,\n            children: reportData.latestMeasurement.classification === 'Normal' ? 'Manter acompanhamento de rotina. Não há necessidade de intervenção específica.' : reportData.latestMeasurement.classification === 'Plagiocefalia Grave' ? 'Recomenda-se avaliação especializada para possível uso de órtese craniana.' : 'Recomenda-se exercícios de posicionamento e acompanhamento regular.'\n          })]\n        })]\n      }), reportData.measurements.length >= 2 && _jsxs(View, {\n        style: styles.chartContainer,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Evolu\\xE7\\xE3o Temporal\"\n        }), _jsx(TimelineChart, {\n          data: reportData.progressData\n        })]\n      }), _jsxs(View, {\n        style: styles.historyContainer,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Hist\\xF3rico de Medi\\xE7\\xF5es\"\n        }), _jsx(FlatList, {\n          data: reportData.measurements.slice().reverse(),\n          renderItem: renderMeasurementItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          scrollEnabled: false\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: function onPress() {\n          return navigation.navigate('MeasurementForm', {\n            patientId: patient.id\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: \"Adicionar Nova Medi\\xE7\\xE3o\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  content: {\n    padding: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#d32f2f',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  patientSelector: {\n    marginBottom: 16\n  },\n  patientInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#E8F5E9',\n    borderWidth: 1,\n    borderColor: '#4CAF50',\n    borderRadius: 5,\n    padding: 12\n  },\n  patientLabel: {\n    fontSize: 16,\n    color: '#424242',\n    marginRight: 5\n  },\n  patientName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    flex: 1\n  },\n  changePatient: {\n    color: '#1976D2',\n    fontSize: 14\n  },\n  selectPatientButton: {\n    backgroundColor: '#E8F5E9',\n    borderWidth: 1,\n    borderColor: '#4CAF50',\n    borderRadius: 5,\n    padding: 12,\n    alignItems: 'center'\n  },\n  selectPatientText: {\n    color: '#2E7D32',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  noDataContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  noDataText: {\n    fontSize: 16,\n    color: '#757575',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  addMeasurementButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  addMeasurementText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  patientDetailsCard: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#424242'\n  },\n  patientDetailsRow: {\n    flexDirection: 'row',\n    marginBottom: 8\n  },\n  patientDetailsLabel: {\n    fontSize: 14,\n    color: '#757575',\n    width: 140\n  },\n  patientDetailsValue: {\n    fontSize: 14,\n    color: '#212121',\n    flex: 1,\n    fontWeight: '500'\n  },\n  summaryCard: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  cardRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16\n  },\n  cardColumn: {\n    flex: 1,\n    marginHorizontal: 4\n  },\n  recommendationContainer: {\n    backgroundColor: '#f5f5f5',\n    borderRadius: 5,\n    padding: 12\n  },\n  recommendationTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#424242',\n    marginBottom: 8\n  },\n  recommendationText: {\n    fontSize: 14,\n    color: '#424242',\n    lineHeight: 20\n  },\n  chartContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  historyContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  measurementItem: {\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 5,\n    marginBottom: 12,\n    overflow: 'hidden'\n  },\n  measurementHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  measurementDate: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#424242'\n  },\n  classificationBadge: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12\n  },\n  classificationText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  measurementDetails: {\n    padding: 10\n  },\n  measurementRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4\n  },\n  measurementLabel: {\n    fontSize: 14,\n    color: '#757575'\n  },\n  measurementValue: {\n    fontSize: 14,\n    color: '#212121',\n    fontWeight: '500'\n  },\n  addButton: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ReportScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","ActivityIndicator","Alert","TouchableOpacity","FlatList","useRoute","useNavigation","useApi","ClassificationCard","TimelineChart","jsx","_jsx","jsxs","_jsxs","ReportScreen","_useState","_useState2","_slicedToArray","patient","setPatient","_useState3","_useState4","reportData","setReportData","_useState5","_useState6","selectedPatientId","setSelectedPatientId","route","_ref","params","patientId","_useApi","getPatients","getPatientReport","loading","error","navigation","loadPatientReport","loadPatients","_ref2","_asyncToGenerator","patients","length","id","alert","apply","arguments","_ref3","report","_x","handleSelectPatient","navigate","formatDate","dateString","date","Date","toLocaleDateString","calculateAge","birthDate","today","birth","age","getFullYear","monthDiff","getMonth","getDate","renderMeasurementItem","_ref4","item","style","styles","measurementItem","children","measurementHeader","measurementDate","classificationBadge","backgroundColor","getClassificationColor","classification","classificationText","measurementDetails","measurementRow","measurementLabel","measurementValue","width","diagonalA","diagonalB","ci","cvai","loadingContainer","size","color","errorContainer","errorText","retryButton","onPress","retryButtonText","measurements","container","patientSelector","patientInfo","patientLabel","patientName","name","changePatient","selectPatientButton","selectPatientText","noDataContainer","noDataText","addMeasurementButton","addMeasurementText","content","patientDetailsCard","sectionTitle","patientDetailsRow","patientDetailsLabel","patientDetailsValue","gender","summaryCard","cardRow","cardColumn","title","value","parseFloat","latestMeasurement","unit","recommendationContainer","recommendationTitle","recommendationText","chartContainer","data","progressData","historyContainer","slice","reverse","renderItem","keyExtractor","toString","scrollEnabled","addButton","addButtonText","create","flex","padding","justifyContent","alignItems","fontSize","marginBottom","textAlign","paddingVertical","paddingHorizontal","borderRadius","fontWeight","flexDirection","borderWidth","borderColor","marginRight","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginHorizontal","lineHeight","overflow","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/screens/ReportScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  ScrollView, \n  ActivityIndicator, \n  Alert,\n  TouchableOpacity,\n  FlatList\n} from 'react-native';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { useApi } from '../contexts/ApiContext';\nimport ClassificationCard from '../components/ClassificationCard';\nimport TimelineChart from '../components/TimelineChart';\n\ninterface RouteParams {\n  patientId?: number;\n}\n\ninterface Measurement {\n  id: number;\n  date: string;\n  width: number;\n  length: number;\n  diagonalA: number;\n  diagonalB: number;\n  ci: string;\n  cvai: string;\n  classification: string;\n}\n\nconst ReportScreen: React.FC = () => {\n  const [patient, setPatient] = useState<any>(null);\n  const [reportData, setReportData] = useState<any>(null);\n  const [selectedPatientId, setSelectedPatientId] = useState<number | null>(null);\n  \n  const route = useRoute();\n  const { patientId } = route.params as RouteParams || {};\n  const { getPatients, getPatientReport, loading, error } = useApi();\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    if (patientId) {\n      setSelectedPatientId(patientId);\n      loadPatientReport(patientId);\n    } else {\n      loadPatients();\n    }\n  }, [patientId]);\n\n  const loadPatients = async () => {\n    try {\n      const patients = await getPatients();\n      if (patients && patients.length > 0) {\n        // Se não tiver paciente selecionado, seleciona o primeiro\n        if (!selectedPatientId) {\n          setSelectedPatientId(patients[0].id);\n          loadPatientReport(patients[0].id);\n        }\n      }\n    } catch (error) {\n      Alert.alert('Erro', 'Não foi possível carregar a lista de pacientes');\n    }\n  };\n\n  const loadPatientReport = async (id: number) => {\n    try {\n      const report = await getPatientReport(id);\n      setReportData(report);\n      setPatient(report.patient);\n    } catch (error) {\n      Alert.alert('Erro', 'Não foi possível carregar o relatório do paciente');\n    }\n  };\n\n  const handleSelectPatient = () => {\n    navigation.navigate('PatientList' as never);\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-BR');\n  };\n\n  const calculateAge = (birthDate: string) => {\n    const today = new Date();\n    const birth = new Date(birthDate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    \n    return age;\n  };\n\n  const renderMeasurementItem = ({ item }: { item: Measurement }) => (\n    <View style={styles.measurementItem}>\n      <View style={styles.measurementHeader}>\n        <Text style={styles.measurementDate}>{formatDate(item.date)}</Text>\n        <View style={[\n          styles.classificationBadge,\n          { backgroundColor: getClassificationColor(item.classification) }\n        ]}>\n          <Text style={styles.classificationText}>{item.classification}</Text>\n        </View>\n      </View>\n      \n      <View style={styles.measurementDetails}>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>Largura:</Text>\n          <Text style={styles.measurementValue}>{item.width} mm</Text>\n        </View>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>Comprimento:</Text>\n          <Text style={styles.measurementValue}>{item.length} mm</Text>\n        </View>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>Diagonal A:</Text>\n          <Text style={styles.measurementValue}>{item.diagonalA} mm</Text>\n        </View>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>Diagonal B:</Text>\n          <Text style={styles.measurementValue}>{item.diagonalB} mm</Text>\n        </View>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>CI:</Text>\n          <Text style={styles.measurementValue}>{item.ci}</Text>\n        </View>\n        <View style={styles.measurementRow}>\n          <Text style={styles.measurementLabel}>CVAI:</Text>\n          <Text style={styles.measurementValue}>{item.cvai}%</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const getClassificationColor = (classification: string): string => {\n    switch (classification) {\n      case 'Plagiocefalia Grave':\n        return '#d32f2f'; // Vermelho\n      case 'Dolicocefalia':\n        return '#ff9800'; // Laranja\n      case 'Braquicefalia':\n        return '#ff9800'; // Laranja\n      case 'Normal':\n        return '#4caf50'; // Verde\n      default:\n        return '#757575'; // Cinza\n    }\n  };\n\n  if (loading && !reportData) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>Erro ao carregar dados</Text>\n        <TouchableOpacity \n          style={styles.retryButton}\n          onPress={() => selectedPatientId && loadPatientReport(selectedPatientId)}\n        >\n          <Text style={styles.retryButtonText}>Tentar novamente</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  if (!reportData || !reportData.measurements || reportData.measurements.length === 0) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.patientSelector}>\n          {patient ? (\n            <View style={styles.patientInfo}>\n              <Text style={styles.patientLabel}>Paciente:</Text>\n              <Text style={styles.patientName}>{patient.name}</Text>\n              <TouchableOpacity onPress={handleSelectPatient}>\n                <Text style={styles.changePatient}>Alterar</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <TouchableOpacity \n              style={styles.selectPatientButton}\n              onPress={handleSelectPatient}\n            >\n              <Text style={styles.selectPatientText}>Selecione um paciente</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        \n        <View style={styles.noDataContainer}>\n          <Text style={styles.noDataText}>\n            {patient \n              ? 'Este paciente ainda não possui medições registradas'\n              : 'Selecione um paciente para visualizar o relatório'}\n          </Text>\n          {patient && (\n            <TouchableOpacity \n              style={styles.addMeasurementButton}\n              onPress={() => navigation.navigate('MeasurementForm' as never, { patientId: patient.id } as never)}\n            >\n              <Text style={styles.addMeasurementText}>Adicionar Medição</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.content}>\n        <View style={styles.patientSelector}>\n          <View style={styles.patientInfo}>\n            <Text style={styles.patientLabel}>Paciente:</Text>\n            <Text style={styles.patientName}>{patient.name}</Text>\n            <TouchableOpacity onPress={handleSelectPatient}>\n              <Text style={styles.changePatient}>Alterar</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        \n        <View style={styles.patientDetailsCard}>\n          <Text style={styles.sectionTitle}>Dados do Paciente</Text>\n          <View style={styles.patientDetailsRow}>\n            <Text style={styles.patientDetailsLabel}>Nome:</Text>\n            <Text style={styles.patientDetailsValue}>{patient.name}</Text>\n          </View>\n          <View style={styles.patientDetailsRow}>\n            <Text style={styles.patientDetailsLabel}>Data de Nascimento:</Text>\n            <Text style={styles.patientDetailsValue}>{formatDate(patient.birthDate)}</Text>\n          </View>\n          <View style={styles.patientDetailsRow}>\n            <Text style={styles.patientDetailsLabel}>Idade:</Text>\n            <Text style={styles.patientDetailsValue}>{calculateAge(patient.birthDate)} anos</Text>\n          </View>\n          {patient.gender && (\n            <View style={styles.patientDetailsRow}>\n              <Text style={styles.patientDetailsLabel}>Gênero:</Text>\n              <Text style={styles.patientDetailsValue}>\n                {patient.gender === 'male' ? 'Masculino' : \n                 patient.gender === 'female' ? 'Feminino' : 'Outro'}\n              </Text>\n            </View>\n          )}\n        </View>\n        \n        <View style={styles.summaryCard}>\n          <Text style={styles.sectionTitle}>Resumo Atual</Text>\n          <View style={styles.cardRow}>\n            <View style={styles.cardColumn}>\n              <ClassificationCard\n                title=\"Índice Craniano (CI)\"\n                value={parseFloat(reportData.latestMeasurement.ci)}\n                classification={reportData.latestMeasurement.classification}\n              />\n            </View>\n            <View style={styles.cardColumn}>\n              <ClassificationCard\n                title=\"CVAI\"\n                value={parseFloat(reportData.latestMeasurement.cvai)}\n                classification={reportData.latestMeasurement.classification}\n                unit=\"%\"\n              />\n            </View>\n          </View>\n          \n          <View style={styles.recommendationContainer}>\n            <Text style={styles.recommendationTitle}>Recomendação Clínica:</Text>\n            <Text style={styles.recommendationText}>\n              {reportData.latestMeasurement.classification === 'Normal'\n                ? 'Manter acompanhamento de rotina. Não há necessidade de intervenção específica.'\n                : reportData.latestMeasurement.classification === 'Plagiocefalia Grave'\n                ? 'Recomenda-se avaliação especializada para possível uso de órtese craniana.'\n                : 'Recomenda-se exercícios de posicionamento e acompanhamento regular.'}\n            </Text>\n          </View>\n        </View>\n        \n        {reportData.measurements.length >= 2 && (\n          <View style={styles.chartContainer}>\n            <Text style={styles.sectionTitle}>Evolução Temporal</Text>\n            <TimelineChart data={reportData.progressData} />\n          </View>\n        )}\n        \n        <View style={styles.historyContainer}>\n          <Text style={styles.sectionTitle}>Histórico de Medições</Text>\n          <FlatList\n            data={reportData.measurements.slice().reverse()} // Mais recentes primeiro\n            renderItem={renderMeasurementItem}\n            keyExtractor={(item) => item.id.toString()}\n            scrollEnabled={false} // Evita scroll dentro de scroll\n          />\n        </View>\n        \n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => navigation.navigate('MeasurementForm' as never, { patientId: patient.id } as never)}\n        >\n          <Text style={styles.addButtonText}>Adicionar Nova Medição</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  content: {\n    padding: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#d32f2f',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  patientSelector: {\n    marginBottom: 16,\n  },\n  patientInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#E8F5E9',\n    borderWidth: 1,\n    borderColor: '#4CAF50',\n    borderRadius: 5,\n    padding: 12,\n  },\n  patientLabel: {\n    fontSize: 16,\n    color: '#424242',\n    marginRight: 5,\n  },\n  patientName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    flex: 1,\n  },\n  changePatient: {\n    color: '#1976D2',\n    fontSize: 14,\n  },\n  selectPatientButton: {\n    backgroundColor: '#E8F5E9',\n    borderWidth: 1,\n    borderColor: '#4CAF50',\n    borderRadius: 5,\n    padding: 12,\n    alignItems: 'center',\n  },\n  selectPatientText: {\n    color: '#2E7D32',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  noDataContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  noDataText: {\n    fontSize: 16,\n    color: '#757575',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  addMeasurementButton: {\n    backgroundColor: '#4CAF50',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  addMeasurementText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  patientDetailsCard: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#424242',\n  },\n  patientDetailsRow: {\n    flexDirection: 'row',\n    marginBottom: 8,\n  },\n  patientDetailsLabel: {\n    fontSize: 14,\n    color: '#757575',\n    width: 140,\n  },\n  patientDetailsValue: {\n    fontSize: 14,\n    color: '#212121',\n    flex: 1,\n    fontWeight: '500',\n  },\n  summaryCard: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  cardRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  cardColumn: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  recommendationContainer: {\n    backgroundColor: '#f5f5f5',\n    borderRadius: 5,\n    padding: 12,\n  },\n  recommendationTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#424242',\n    marginBottom: 8,\n  },\n  recommendationText: {\n    fontSize: 14,\n    color: '#424242',\n    lineHeight: 20,\n  },\n  chartContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  historyContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  measurementItem: {\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 5,\n    marginBottom: 12,\n    overflow: 'hidden',\n  },\n  measurementHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  measurementDate: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#424242',\n  },\n  classificationBadge: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n  },\n  classificationText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  measurementDetails: {\n    padding: 10,\n  },\n  measurementRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4,\n  },\n  measurementLabel: {\n    fontSize: 14,\n    color: '#757575',\n  },\n  measurementValue: {\n    fontSize: 14,\n    color: '#212121',\n    fontWeight: '500',\n  },\n  addButton: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ReportScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}