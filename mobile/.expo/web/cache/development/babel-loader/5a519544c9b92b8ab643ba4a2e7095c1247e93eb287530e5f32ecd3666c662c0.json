{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MeasurementFormScreen from \"../screens/MeasurementFormScreen\";\nimport PatientListScreen from \"../screens/PatientListScreen\";\nimport ReportScreen from \"../screens/ReportScreen\";\nimport EvolutionScreen from \"../screens/EvolutionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar MainStack = function MainStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"MeasurementForm\",\n    screenOptions: {\n      headerShown: true,\n      headerStyle: {\n        backgroundColor: '#6200ee'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"MeasurementForm\",\n      component: MeasurementFormScreen,\n      options: {\n        title: 'Nova Medição'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"PatientList\",\n      component: PatientListScreen,\n      options: {\n        title: 'Lista de Pacientes'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Report\",\n      component: ReportScreen,\n      options: {\n        title: 'Relatório'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Evolution\",\n      component: EvolutionScreen,\n      options: {\n        title: 'Evolução'\n      }\n    })]\n  });\n};\nexport default MainStack;","map":{"version":3,"names":["React","createStackNavigator","MeasurementFormScreen","PatientListScreen","ReportScreen","EvolutionScreen","jsx","_jsx","jsxs","_jsxs","Stack","MainStack","Navigator","initialRouteName","screenOptions","headerShown","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","children","Screen","name","component","options","title"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/navigation/MainStack.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport MeasurementFormScreen from '../screens/MeasurementFormScreen';\r\nimport PatientListScreen from '../screens/PatientListScreen';\r\nimport ReportScreen from '../screens/ReportScreen';\r\nimport EvolutionScreen from '../screens/EvolutionScreen';\r\nimport type { RootStackParamList } from './types';\r\n\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\n\r\nconst MainStack: React.FC = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"MeasurementForm\"\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerStyle: { backgroundColor: '#6200ee' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { fontWeight: 'bold' },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"MeasurementForm\"\r\n        component={MeasurementFormScreen}\r\n        options={{ title: 'Nova Medição' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"PatientList\"\r\n        component={PatientListScreen}\r\n        options={{ title: 'Lista de Pacientes' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Report\"\r\n        component={ReportScreen}\r\n        options={{ title: 'Relatório' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Evolution\"\r\n        component={EvolutionScreen}\r\n        options={{ title: 'Evolução' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainStack;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,qBAAqB;AAC5B,OAAOC,iBAAiB;AACxB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGzD,IAAMC,KAAK,GAAGT,oBAAoB,CAAqB,CAAC;AAExD,IAAMU,SAAmB,GAAG,SAAtBA,SAAmBA,CAAA,EAAS;EAChC,OACEF,KAAA,CAACC,KAAK,CAACE,SAAS;IACdC,gBAAgB,EAAC,iBAAiB;IAClCC,aAAa,EAAE;MACbC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAU,CAAC;MAC3CC,eAAe,EAAE,MAAM;MACvBC,gBAAgB,EAAE;QAAEC,UAAU,EAAE;MAAO;IACzC,CAAE;IAAAC,QAAA,GAEFd,IAAA,CAACG,KAAK,CAACY,MAAM;MACXC,IAAI,EAAC,iBAAiB;MACtBC,SAAS,EAAEtB,qBAAsB;MACjCuB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAe;IAAE,CACpC,CAAC,EACFnB,IAAA,CAACG,KAAK,CAACY,MAAM;MACXC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAErB,iBAAkB;MAC7BsB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAqB;IAAE,CAC1C,CAAC,EACFnB,IAAA,CAACG,KAAK,CAACY,MAAM;MACXC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEpB,YAAa;MACxBqB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAY;IAAE,CACjC,CAAC,EACFnB,IAAA,CAACG,KAAK,CAACY,MAAM;MACXC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAEnB,eAAgB;MAC3BoB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAW;IAAE,CAChC,CAAC;EAAA,CACa,CAAC;AAEtB,CAAC;AAED,eAAef,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}