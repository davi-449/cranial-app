{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useApi } from \"../contexts/ApiContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientListScreen = function PatientListScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    patients = _useState2[0],\n    setPatients = _useState2[1];\n  var _useApi = useApi(),\n    getPatients = _useApi.getPatients,\n    deletePatient = _useApi.deletePatient;\n  useEffect(function () {\n    loadPatients();\n  }, []);\n  var loadPatients = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatients();\n        setPatients(data);\n      } catch (error) {\n        Alert.alert('Erro', 'Não foi possível carregar a lista de pacientes');\n      }\n    });\n    return function loadPatients() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleDeletePatient = function () {\n    var _ref2 = _asyncToGenerator(function* (id) {\n      Alert.alert('Confirmar Exclusão', 'Tem certeza de que deseja excluir este paciente?', [{\n        text: 'Cancelar',\n        style: 'cancel'\n      }, {\n        text: 'Excluir',\n        style: 'destructive',\n        onPress: function () {\n          var _onPress = _asyncToGenerator(function* () {\n            try {\n              yield deletePatient(id);\n              setPatients(function (prev) {\n                return prev.filter(function (patient) {\n                  return patient.id !== id;\n                });\n              });\n              Alert.alert('Sucesso', 'Paciente excluído com sucesso');\n            } catch (error) {\n              Alert.alert('Erro', 'Não foi possível excluir o paciente');\n            }\n          });\n          function onPress() {\n            return _onPress.apply(this, arguments);\n          }\n          return onPress;\n        }()\n      }]);\n    });\n    return function handleDeletePatient(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderPatient = function renderPatient(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(View, {\n      style: styles.patientItem,\n      children: [_jsx(Text, {\n        style: styles.patientName,\n        children: item.name\n      }), _jsx(TouchableOpacity, {\n        style: styles.deleteButton,\n        onPress: function onPress() {\n          return handleDeletePatient(item.id);\n        },\n        children: _jsx(Text, {\n          style: styles.deleteButtonText,\n          children: \"Excluir\"\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lista de Pacientes\"\n    }), _jsx(FlatList, {\n      data: patients,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderPatient,\n      contentContainerStyle: styles.listContainer,\n      ListEmptyComponent: _jsx(Text, {\n        style: styles.emptyText,\n        children: \"Nenhum paciente encontrado\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#6200ee'\n  },\n  listContainer: {\n    paddingBottom: 16\n  },\n  patientItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    marginBottom: 12,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  patientName: {\n    fontSize: 16,\n    color: '#333'\n  },\n  deleteButton: {\n    backgroundColor: '#d32f2f',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5\n  },\n  deleteButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: '#888',\n    marginTop: 20\n  }\n});\nexport default PatientListScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","TouchableOpacity","Alert","useApi","jsx","_jsx","jsxs","_jsxs","PatientListScreen","_useState","_useState2","_slicedToArray","patients","setPatients","_useApi","getPatients","deletePatient","loadPatients","_ref","_asyncToGenerator","data","error","alert","apply","arguments","handleDeletePatient","_ref2","id","text","style","onPress","_onPress","prev","filter","patient","_x","renderPatient","_ref3","item","styles","patientItem","children","patientName","name","deleteButton","deleteButtonText","container","title","keyExtractor","toString","renderItem","contentContainerStyle","listContainer","ListEmptyComponent","emptyText","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","paddingBottom","flexDirection","justifyContent","alignItems","borderRadius","borderWidth","borderColor","paddingVertical","paddingHorizontal","textAlign","marginTop"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/screens/PatientListScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  FlatList, \n  TouchableOpacity, \n  Alert \n} from 'react-native';\nimport { useApi } from '../contexts/ApiContext';\n\ninterface Patient {\n  id: number;\n  name: string;\n}\n\nconst PatientListScreen: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const { getPatients, deletePatient } = useApi();\n\n  useEffect(() => {\n    loadPatients();\n  }, []);\n\n  const loadPatients = async () => {\n    try {\n      const data = await getPatients();\n      setPatients(data);\n    } catch (error) {\n      Alert.alert('Erro', 'Não foi possível carregar a lista de pacientes');\n    }\n  };\n\n  const handleDeletePatient = async (id: number) => {\n    Alert.alert(\n      'Confirmar Exclusão',\n      'Tem certeza de que deseja excluir este paciente?',\n      [\n        { text: 'Cancelar', style: 'cancel' },\n        {\n          text: 'Excluir',\n          style: 'destructive',\n          onPress: async () => {\n            try {\n              await deletePatient(id);\n              setPatients((prev) => prev.filter((patient) => patient.id !== id));\n              Alert.alert('Sucesso', 'Paciente excluído com sucesso');\n            } catch (error) {\n              Alert.alert('Erro', 'Não foi possível excluir o paciente');\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  const renderPatient = ({ item }: { item: Patient }) => (\n    <View style={styles.patientItem}>\n      <Text style={styles.patientName}>{item.name}</Text>\n      <TouchableOpacity\n        style={styles.deleteButton}\n        onPress={() => handleDeletePatient(item.id)}\n      >\n        <Text style={styles.deleteButtonText}>Excluir</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Lista de Pacientes</Text>\n      <FlatList\n        data={patients}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={renderPatient}\n        contentContainerStyle={styles.listContainer}\n        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum paciente encontrado</Text>}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#6200ee',\n  },\n  listContainer: {\n    paddingBottom: 16,\n  },\n  patientItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    marginBottom: 12,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  patientName: {\n    fontSize: 16,\n    color: '#333',\n  },\n  deleteButton: {\n    backgroundColor: '#d32f2f',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n  },\n  deleteButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: '#888',\n    marginTop: 20,\n  },\n});\n\nexport default PatientListScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}