{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport axios from 'axios';\nimport { sendMessageToGemini } from \"../services/geminiApi\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VirtualAssistantScreen = function VirtualAssistantScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleSendMessage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!input.trim()) return;\n      var userMessage = {\n        id: Date.now().toString(),\n        text: input,\n        sender: 'user'\n      };\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [userMessage]);\n      });\n      setInput('');\n      setLoading(true);\n      try {\n        var response = yield sendMessageToGemini(input);\n        var assistantMessage = {\n          id: Date.now().toString(),\n          text: response.reply,\n          sender: 'assistant'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [assistantMessage]);\n        });\n      } catch (error) {\n        console.error('Erro ao obter resposta do assistente:', error);\n        var errorMessage = {\n          id: Date.now().toString(),\n          text: \"Erro ao obter resposta do assistente: \" + (axios.isAxiosError(error) ? error.message : 'Erro desconhecido.'),\n          sender: 'assistant'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [errorMessage]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderMessage = function renderMessage(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: [styles.messageContainer, item.sender === 'user' ? styles.userMessage : styles.assistantMessage],\n      children: _jsx(Text, {\n        style: styles.messageText,\n        children: item.text\n      })\n    });\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    children: [_jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderMessage,\n      contentContainerStyle: styles.messagesList\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite sua mensagem...\",\n        value: input,\n        onChangeText: setInput\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: handleSendMessage,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.sendButtonText,\n          children: loading ? '...' : 'Enviar'\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  messagesList: {\n    padding: 16\n  },\n  messageContainer: {\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#4CAF50'\n  },\n  assistantMessage: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#D1E7DD'\n  },\n  messageText: {\n    color: '#212529'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 16,\n    borderTopWidth: 1,\n    borderColor: '#ddd',\n    backgroundColor: '#fff'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    paddingHorizontal: 8\n  },\n  sendButton: {\n    marginLeft: 8,\n    backgroundColor: '#6200ee',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sendButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default VirtualAssistantScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","FlatList","KeyboardAvoidingView","Platform","axios","sendMessageToGemini","jsx","_jsx","jsxs","_jsxs","VirtualAssistantScreen","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","_useState5","_useState6","loading","setLoading","handleSendMessage","_ref","_asyncToGenerator","trim","userMessage","id","Date","now","toString","text","sender","prev","concat","_toConsumableArray","response","assistantMessage","reply","error","console","errorMessage","isAxiosError","message","apply","arguments","renderMessage","_ref2","item","style","styles","messageContainer","children","messageText","container","behavior","OS","undefined","data","keyExtractor","renderItem","contentContainerStyle","messagesList","inputContainer","placeholder","value","onChangeText","sendButton","onPress","disabled","sendButtonText","create","flex","backgroundColor","padding","borderRadius","marginBottom","maxWidth","alignSelf","color","flexDirection","borderTopWidth","borderColor","height","borderWidth","paddingHorizontal","marginLeft","justifyContent","alignItems","fontWeight"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/screens/VirtualAssistantScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  FlatList,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from 'react-native';\r\nimport axios from 'axios';\r\nimport { sendMessageToGemini } from '../services/geminiApi';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'assistant';\r\n}\r\n\r\nconst VirtualAssistantScreen: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: input,\r\n      sender: 'user',\r\n    };\r\n\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await sendMessageToGemini(input);\r\n      const assistantMessage: Message = {\r\n        id: Date.now().toString(),\r\n        text: response.reply, // Substitua \"reply\" pelo campo correto da resposta da API\r\n        sender: 'assistant',\r\n      };\r\n      setMessages((prev) => [...prev, assistantMessage]);\r\n    } catch (error) {\r\n      console.error('Erro ao obter resposta do assistente:', error);\r\n      const errorMessage: Message = {\r\n        id: Date.now().toString(),\r\n        text: `Erro ao obter resposta do assistente: ${\r\n          axios.isAxiosError(error) ? error.message : 'Erro desconhecido.'\r\n        }`,\r\n        sender: 'assistant',\r\n      };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderMessage = ({ item }: { item: Message }) => (\r\n    <View\r\n      style={[\r\n        styles.messageContainer,\r\n        item.sender === 'user' ? styles.userMessage : styles.assistantMessage,\r\n      ]}\r\n    >\r\n      <Text style={styles.messageText}>{item.text}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\r\n    >\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={renderMessage}\r\n        contentContainerStyle={styles.messagesList}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite sua mensagem...\"\r\n          value={input}\r\n          onChangeText={setInput}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.sendButton}\r\n          onPress={handleSendMessage}\r\n          disabled={loading}\r\n        >\r\n          <Text style={styles.sendButtonText}>{loading ? '...' : 'Enviar'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  messagesList: {\r\n    padding: 16,\r\n  },\r\n  messageContainer: {\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 8,\r\n    maxWidth: '80%',\r\n  },\r\n  userMessage: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: '#4CAF50', // Verde para o usu√°rio\r\n  },\r\n  assistantMessage: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: '#D1E7DD', // Verde claro para o assistente\r\n  },\r\n  messageText: {\r\n    color: '#212529', // Preto ou cinza escuro para o texto\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderColor: '#ddd',\r\n    backgroundColor: '#fff',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 8,\r\n  },\r\n  sendButton: {\r\n    marginLeft: 8,\r\n    backgroundColor: '#6200ee',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default VirtualAssistantScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}