{"ast":null,"code":"import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport PatientListScreen from \"../screens/PatientListScreen\";\nimport PatientFormScreen from \"../screens/PatientFormScreen\";\nimport VirtualAssistantScreen from \"../screens/VirtualAssistantScreen\";\nimport MeasurementFormScreen from \"../screens/MeasurementFormScreen\";\nimport ProgressChartScreen from \"../screens/ProgressChartScreen\";\nimport ReportScreen from \"../screens/ReportScreen\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'PatientList') {\n            iconName = focused ? 'people' : 'people-outline';\n          } else if (route.name === 'MeasurementForm') {\n            iconName = focused ? 'add-circle' : 'add-circle-outline';\n          } else if (route.name === 'ProgressChart') {\n            iconName = focused ? 'stats-chart' : 'stats-chart-outline';\n          } else if (route.name === 'Report') {\n            iconName = focused ? 'document-text' : 'document-text-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#4CAF50',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: true\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"PatientList\",\n      component: PatientListScreen,\n      options: {\n        title: 'Pacientes'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"MeasurementForm\",\n      component: MeasurementFormScreen,\n      options: {\n        title: 'Nova Medição'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"VirtualAssistant\",\n      component: VirtualAssistantScreen,\n      options: {\n        title: 'Assistente Virtual'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ProgressChart\",\n      component: ProgressChartScreen,\n      options: {\n        title: 'Evolução'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Report\",\n      component: ReportScreen,\n      options: {\n        title: 'Relatório'\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    signed = _useAuth.signed,\n    loading = _useAuth.loading;\n  if (loading) {\n    return null;\n  }\n  return _jsx(Stack.Navigator, {\n    children: signed ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PatientForm\",\n        component: PatientFormScreen,\n        options: {\n          title: 'Cadastro de Paciente'\n        }\n      })]\n    }) : _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","createNativeStackNavigator","createBottomTabNavigator","Ionicons","LoginScreen","PatientListScreen","PatientFormScreen","VirtualAssistantScreen","MeasurementFormScreen","ProgressChartScreen","ReportScreen","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","options","title","AppNavigator","_useAuth","signed","loading"],"sources":["C:/Users/Davi/Desktop/projetos/cranial-app/cranial-app/mobile/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport LoginScreen from '../screens/LoginScreen';\nimport PatientListScreen from '../screens/PatientListScreen';\nimport PatientFormScreen from '../screens/PatientFormScreen';\nimport VirtualAssistantScreen from '../screens/VirtualAssistantScreen';\nimport MeasurementFormScreen from '../screens/MeasurementFormScreen';\nimport ProgressChartScreen from '../screens/ProgressChartScreen';\nimport ReportScreen from '../screens/ReportScreen';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Navegação principal após login\nconst MainTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'PatientList') {\n            iconName = focused ? 'people' : 'people-outline';\n          } else if (route.name === 'MeasurementForm') {\n            iconName = focused ? 'add-circle' : 'add-circle-outline';\n          } else if (route.name === 'ProgressChart') {\n            iconName = focused ? 'stats-chart' : 'stats-chart-outline';\n          } else if (route.name === 'Report') {\n            iconName = focused ? 'document-text' : 'document-text-outline';\n          }\n\n          return <Ionicons name={iconName as any} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#4CAF50',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: true,\n      })}\n    >\n      <Tab.Screen \n        name=\"PatientList\" \n        component={PatientListScreen} \n        options={{ title: 'Pacientes' }}\n      />\n      <Tab.Screen \n        name=\"MeasurementForm\" \n        component={MeasurementFormScreen} \n        options={{ title: 'Nova Medição' }}\n      />\n       <Tab.Screen \n        name=\"VirtualAssistant\" \n        component={VirtualAssistantScreen} \n        options={{ title: 'Assistente Virtual' }}\n      />\n      <Tab.Screen \n        name=\"ProgressChart\" \n        component={ProgressChartScreen} \n        options={{ title: 'Evolução' }}\n      />\n      <Tab.Screen \n        name=\"Report\" \n        component={ReportScreen} \n        options={{ title: 'Relatório' }}\n      />\n    </Tab.Navigator>\n  );\n};\n\n// Navegador principal que controla autenticação\nconst AppNavigator = () => {\n  const { signed, loading } = useAuth();\n\n  if (loading) {\n    // Poderia mostrar uma tela de splash aqui\n    return null;\n  }\n\n  return (\n    <Stack.Navigator>\n      {signed ? (\n        <>\n          <Stack.Screen \n            name=\"Main\" \n            component={MainTabs} \n            options={{ headerShown: false }}\n          />\n          <Stack.Screen \n            name=\"PatientForm\" \n            component={PatientFormScreen} \n            options={{ title: 'Cadastro de Paciente' }}\n          />\n        </>\n      ) : (\n        <Stack.Screen \n          name=\"Login\" \n          component={LoginScreen} \n          options={{ headerShown: false }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default AppNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}